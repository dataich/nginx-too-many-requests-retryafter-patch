diff -Bbu -ur nginx-1.11.0/src/http/modules/ngx_http_limit_req_module.c nginx-1.11.0-retry-after-pached/src/http/modules/ngx_http_limit_req_module.c
--- nginx-1.11.0/src/http/modules/ngx_http_limit_req_module.c	2016-05-24 11:54:42.000000000 -0400
+++ nginx-1.11.0-retry-after-pached/src/http/modules/ngx_http_limit_req_module.c	2016-05-31 10:04:59.000000000 -0400
@@ -164,6 +164,9 @@
     ngx_http_limit_req_ctx_t    *ctx;
     ngx_http_limit_req_conf_t   *lrcf;
     ngx_http_limit_req_limit_t  *limit, *limits;
+    ngx_table_elt_t             *h;
+    ngx_uint_t                  rate;
+    u_char                      *ra;
 
     if (r->main->limit_req_set) {
         return NGX_DECLINED;
@@ -173,6 +176,7 @@
     limits = lrcf->limits.elts;
 
     excess = 0;
+    rate = 0;
 
     rc = NGX_DECLINED;
 
@@ -216,6 +220,7 @@
                        n, rc, excess / 1000, excess % 1000);
 
         if (rc != NGX_AGAIN) {
+            rate = ctx->rate;
             break;
         }
     }
@@ -233,6 +238,17 @@
                           "limiting requests, excess: %ui.%03ui by zone \"%V\"",
                           excess / 1000, excess % 1000,
                           &limit->shm_zone->shm.name);
+
+            if ( rate > 0 && (ra = ngx_palloc(r->pool, sizeof("1000"))) != NULL){
+                h = ngx_list_push(&r->headers_out.headers);
+                if ( h != NULL ){
+                    h->hash = 1;
+                    ngx_str_set(&h->key, "Retry-After");
+                    ngx_sprintf(ra, "%ui", (rate >= 1000) ? 1 : 1000/rate);
+                    h->value.len = ngx_strlen(ra);
+                    h->value.data = ra;
+                }
+            }
         }
 
         while (n--) {
@@ -720,7 +736,7 @@
                                 NGX_LOG_INFO : conf->limit_log_level + 1;
 
     ngx_conf_merge_uint_value(conf->status_code, prev->status_code,
-                              NGX_HTTP_SERVICE_UNAVAILABLE);
+                              NGX_HTTP_TOO_MANY_REQUESTS);
 
     return NGX_CONF_OK;
 }
Only in nginx-1.11.0-retry-after-pached/src/http/modules: ngx_http_limit_req_module.c.orig
diff -Bbu -ur nginx-1.11.0/src/http/ngx_http_header_filter_module.c nginx-1.11.0-retry-after-pached/src/http/ngx_http_header_filter_module.c
--- nginx-1.11.0/src/http/ngx_http_header_filter_module.c	2016-05-24 11:54:43.000000000 -0400
+++ nginx-1.11.0-retry-after-pached/src/http/ngx_http_header_filter_module.c	2016-05-31 10:12:03.000000000 -0400
@@ -101,11 +101,18 @@
     ngx_null_string,  /* "420 unused" */
     ngx_string("421 Misdirected Request"),
 
-    /* ngx_null_string, */  /* "422 Unprocessable Entity" */
-    /* ngx_null_string, */  /* "423 Locked" */
-    /* ngx_null_string, */  /* "424 Failed Dependency" */
+    ngx_null_string,  /* "422 Unprocessable Entity" */
+    ngx_null_string,  /* "423 Locked" */
+    ngx_null_string,  /* "424 Failed Dependency" */
+    ngx_null_string,  /* "425 No code" */
+    ngx_null_string,  /* "426 Upgrade Required" */
+    ngx_null_string,  /* "427 unused" */
+    ngx_null_string,  /* "428 Precondition Required" */
+    ngx_string("429 Too Many Requests"),
+    /* ngx_null_string, */  /* "430 unused" */
+    /* ngx_null_string, */  /* "431 Request Header Fields Too Large" */
 
-#define NGX_HTTP_LAST_4XX  422
+#define NGX_HTTP_LAST_4XX  430
 #define NGX_HTTP_OFF_5XX   (NGX_HTTP_LAST_4XX - 400 + NGX_HTTP_OFF_4XX)
 
     ngx_string("500 Internal Server Error"),
diff -Bbu -ur nginx-1.11.0/src/http/ngx_http_request.h nginx-1.11.0-retry-after-pached/src/http/ngx_http_request.h
--- nginx-1.11.0/src/http/ngx_http_request.h	2016-05-24 11:54:43.000000000 -0400
+++ nginx-1.11.0-retry-after-pached/src/http/ngx_http_request.h	2016-05-31 10:04:59.000000000 -0400
@@ -97,6 +97,7 @@
 #define NGX_HTTP_RANGE_NOT_SATISFIABLE     416
 #define NGX_HTTP_MISDIRECTED_REQUEST       421
 
+#define NGX_HTTP_TOO_MANY_REQUESTS         429
 
 /* Our own HTTP codes */
 
Only in nginx-1.11.0-retry-after-pached/src/http: ngx_http_request.h.orig
diff -Bbu -ur nginx-1.11.0/src/http/ngx_http_special_response.c nginx-1.11.0-retry-after-pached/src/http/ngx_http_special_response.c
--- nginx-1.11.0/src/http/ngx_http_special_response.c	2016-05-24 11:54:43.000000000 -0400
+++ nginx-1.11.0-retry-after-pached/src/http/ngx_http_special_response.c	2016-05-31 10:14:15.000000000 -0400
@@ -347,8 +347,16 @@
     ngx_null_string,                     /* 419 */
     ngx_null_string,                     /* 420 */
     ngx_string(ngx_http_error_421_page),
+    ngx_null_string,                     /* 422 */
+    ngx_null_string,                     /* 423 */
+    ngx_null_string,                     /* 424 */
+    ngx_null_string,                     /* 425 */
+    ngx_null_string,                     /* 426 */
+    ngx_null_string,                     /* 427 */
+    ngx_null_string,                     /* 428 */
+    ngx_null_string,                     /* 429 */
 
-#define NGX_HTTP_LAST_4XX  422
+#define NGX_HTTP_LAST_4XX  430
 #define NGX_HTTP_OFF_5XX   (NGX_HTTP_LAST_4XX - 400 + NGX_HTTP_OFF_4XX)
 
     ngx_string(ngx_http_error_494_page), /* 494, request header too large */
